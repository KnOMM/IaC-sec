- name: backup dir at /home/backup/mysql
  ansible.builtin.file:
    owner: backup
    group: backup
    path: /home/backup/mysql
    state: directory
  
- name: exporter template
  ansible.builtin.template:
    mode: 400
    owner: prometheus
    dest: /var/lib/prometheus/.my.cnf
    src: my.cnf.j2
  no_log: yes
  notify: Restart MySQL exporter

- name: Exporter template args conf
  ansible.builtin.template:
    dest: /etc/default/prometheus-mysqld-exporter
    src: prometheus-mysqld-exporter.j2
  no_log: yes
  notify: Restart MySQL exporter

- name: backup template of my.cnf
  ansible.builtin.template:
    mode: 400
    owner: backup
    group: backup
    dest: /home/backup/.my.cnf
    src: my.cnf.backup.j2
  no_log: yes

- name: Cron tab
  ansible.builtin.template:
    owner: root 
    group: root
    mode: 644
    src: mysql-backup.j2
    dest: /etc/cron.d/mysql-backup

- name: Install mysql
  ansible.builtin.apt:
    name:
      - mysql-server
      - python3-pymysql
      - prometheus-mysqld-exporter

- name: Copy override to the remote host
  ansible.builtin.template:
    src: override.cnf.j2
    dest: /etc/mysql/mysql.conf.d/override.cnf
  notify: Restart MySQL

- name: MySQL database
  community.mysql.mysql_db:
    name: "{{ mysql_database }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  notify:
    - Reset MySQL source
    - Reset MySQL replica

- name: MySQL user
  community.mysql.mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_password }}"
    host: "%"
    priv: "{{ mysql_database }}.*:ALL"
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: MySQL exporter user
  community.mysql.mysql_user:
    name: "{{ mysql_exporter_user }}"
    password: "{{ mysql_password }}"
    priv: '*.*:PROCESS,REPLICATION CLIENT,SELECT'
    login_unix_socket: /var/run/mysqld/mysqld.sock
  notify: Restart MySQL exporter

- name: MySQL backup user
  community.mysql.mysql_user:
    name: "{{ mysql_backup }}"
    password: "{{ mysql_password }}"
    host: "%"
    priv: "{{ mysql_database }}.*:LOCK TABLES,SELECT"
    login_unix_socket: /var/run/mysqld/mysqld.sock


#- name: Install exporter
#  ansible.builtin.apt:
#    name: prometheus-mysqld-exporter
#
#- name: Install python library
#  ansible.builtin.apt:
#    name: python3-pymysql

#- name: mysql exporter service
#  ansible.builtin.service:
#    name: prometheus-mysqld-exporter
#    state: started
#    enabled: true

- name: mysql service
  ansible.builtin.service:
    enabled: true
    name: "{{ item }}"
    state: started
  loop:
    - mysql
    - prometheus-mysqld-exporter

- name: MySQL replica user
  community.mysql.mysql_user:
    name: "{{ mysql_replication_user }}"
    password: "{{ mysql_replication_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    host: "%"
    priv: "*.*:REPLICATION SLAVE"

- name: Dynamic read-only allocation
  community.mysql.mysql_variables:
    variable: read_only
    value: "{{ 'OFF' if inventory_hostname == mysql_host else 'ON' }}"
    mode: persist
    login_unix_socket: /var/run/mysqld/mysqld.sock
  notify:
    - Reset MySQL source
    - Reset MySQL replica

